[
  {
    "question": "What is Express.js?",
    "options": ["A frontend framework", "A database system", "A backend framework for Node.js"],
    "answer": "A backend framework for Node.js"
  },
  {
    "question": "Which command is used to install Express.js in a Node.js project?",
    "options": ["npm install express", "express new project", "node install express"],
    "answer": "npm install express"
  },
  {
    "question": "Which method is used to define a GET route in Express.js?",
    "options": ["app.get()", "app.route()", "app.fetch()"],
    "answer": "app.get()"
  },
  {
    "question": "What is the default port used by an Express.js application?",
    "options": ["3000", "8000", "5000"],
    "answer": "3000"
  },
  {
    "question": "Which middleware is used to parse incoming JSON requests in Express.js?",
    "options": ["express.json()", "bodyParser()", "app.use(json())"],
    "answer": "express.json()"
  },
  {
    "question": "Which object is used to handle HTTP responses in Express.js?",
    "options": ["req", "res", "next"],
    "answer": "res"
  },
  {
    "question": "What is middleware in Express.js?",
    "options": ["A function that runs before the request reaches the route handler", "A database query", "A frontend template engine"],
    "answer": "A function that runs before the request reaches the route handler"
  },
  {
    "question": "Which of these is a built-in middleware in Express.js?",
    "options": ["cors", "express.static", "helmet"],
    "answer": "express.static"
  },
  {
    "question": "How do you define a route parameter in Express.js?",
    "options": ["/user/:id", "/user?id", "/user{id}"],
    "answer": "/user/:id"
  },
  {
    "question": "Which of the following is true about Express.js?",
    "options": ["It is a lightweight and fast web framework", "It is only used for frontend development", "It does not support middleware"],
    "answer": "It is a lightweight and fast web framework"
  }
]
